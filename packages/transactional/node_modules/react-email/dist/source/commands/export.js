"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exportTemplates = void 0;
var node_fs_1 = __importStar(require("node:fs"));
var node_path_1 = __importDefault(require("node:path"));
var glob_1 = require("glob");
var esbuild_1 = __importDefault(require("esbuild"));
var ora_1 = __importDefault(require("ora"));
var log_symbols_1 = __importDefault(require("log-symbols"));
var render_1 = require("@react-email/render");
var normalize_path_1 = __importDefault(require("normalize-path"));
var shelljs_1 = __importDefault(require("shelljs"));
var close_ora_on_sigint_1 = require("../utils/close-ora-on-sigint");
var tree_1 = require("../utils/tree");
/*
  This first builds all the templates using esbuild and then puts the output in the `.js`
  files. Then these `.js` files are imported dynamically and rendered to `.html` files
  using the `render` function.
 */
var exportTemplates = function (outDir, srcDir, options) { return __awaiter(void 0, void 0, void 0, function () {
    var spinner, allTemplates, buildResult, allBuiltTemplates, _i, allBuiltTemplates_1, template, component, rendered, htmlPath, exception_1, staticDir, hasStaticDirectory, result, fileTree;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                spinner = (0, ora_1.default)('Preparing files...\n').start();
                (0, close_ora_on_sigint_1.closeOraOnSIGNIT)(spinner);
                allTemplates = glob_1.glob.sync((0, normalize_path_1.default)(node_path_1.default.join(srcDir, '*.{tsx,jsx}')));
                buildResult = esbuild_1.default.buildSync({
                    bundle: true,
                    entryPoints: allTemplates,
                    platform: 'node',
                    write: true,
                    tsconfig: node_path_1.default.join(__dirname, '../../..', 'tsconfig.export.json'),
                    outdir: outDir,
                });
                if (buildResult.warnings.length > 0) {
                    console.warn(buildResult.warnings);
                }
                if (buildResult.errors.length > 0) {
                    spinner.stopAndPersist({
                        symbol: log_symbols_1.default.error,
                        text: 'Failed to build emails',
                    });
                    console.error(buildResult.errors);
                    throw new Error("esbuild bundling process for email templates:\n".concat(allTemplates
                        .map(function (p) { return "- ".concat(p); })
                        .join('\n')));
                }
                spinner.succeed();
                allBuiltTemplates = glob_1.glob.sync((0, normalize_path_1.default)("".concat(outDir, "/*.js")), {
                    absolute: true,
                });
                _i = 0, allBuiltTemplates_1 = allBuiltTemplates;
                _a.label = 1;
            case 1:
                if (!(_i < allBuiltTemplates_1.length)) return [3 /*break*/, 6];
                template = allBuiltTemplates_1[_i];
                _a.label = 2;
            case 2:
                _a.trys.push([2, 4, , 5]);
                spinner.text = "rendering ".concat(template.split('/').pop());
                spinner.render();
                return [4 /*yield*/, Promise.resolve("".concat(template)).then(function (s) { return __importStar(require(s)); })];
            case 3:
                component = _a.sent();
                rendered = (0, render_1.render)(component.default({}), options);
                htmlPath = template.replace('.js', options.plainText ? '.txt' : '.html');
                (0, node_fs_1.writeFileSync)(htmlPath, rendered);
                (0, node_fs_1.unlinkSync)(template);
                return [3 /*break*/, 5];
            case 4:
                exception_1 = _a.sent();
                spinner.stopAndPersist({
                    symbol: log_symbols_1.default.error,
                    text: "failed when rendering ".concat(template.split('/').pop()),
                });
                console.error(exception_1);
                throw exception_1;
            case 5:
                _i++;
                return [3 /*break*/, 1];
            case 6:
                spinner.succeed('Rendered all files');
                spinner.text = "Copying static files";
                spinner.render();
                staticDir = node_path_1.default.join(srcDir, 'static');
                hasStaticDirectory = node_fs_1.default.existsSync(staticDir);
                if (hasStaticDirectory) {
                    result = shelljs_1.default.cp('-r', staticDir, node_path_1.default.join(outDir, 'static'));
                    if (result.code > 0) {
                        spinner.stopAndPersist({
                            symbol: log_symbols_1.default.error,
                            text: 'Failed to copy static files',
                        });
                        throw new Error("Something went wrong while copying the file to ".concat(outDir, "/static, ").concat(result.cat()));
                    }
                }
                spinner.succeed();
                return [4 /*yield*/, (0, tree_1.tree)(outDir, 4)];
            case 7:
                fileTree = _a.sent();
                console.log(fileTree);
                spinner.stopAndPersist({
                    symbol: log_symbols_1.default.success,
                    text: 'Successfully exported emails',
                });
                process.exit();
                return [2 /*return*/];
        }
    });
}); };
exports.exportTemplates = exportTemplates;
