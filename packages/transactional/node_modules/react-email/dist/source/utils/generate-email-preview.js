"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateEmailsPreview = void 0;
var node_fs_1 = __importDefault(require("node:fs"));
var node_path_1 = __importDefault(require("node:path"));
var ora_1 = __importDefault(require("ora"));
var shelljs_1 = __importDefault(require("shelljs"));
var log_symbols_1 = __importDefault(require("log-symbols"));
var fs_extra_1 = __importDefault(require("fs-extra"));
var glob_1 = require("glob");
var constants_1 = require("./constants");
var close_ora_on_sigint_1 = require("./close-ora-on-sigint");
/**
 * Node.js and imports are requiring all imports to be /, while some functions (like glob) return paths with \\ for path separation on windows
 */
function osIndependentPath(p) {
    return p.split(node_path_1.default.sep).join('/');
}
var generateEmailsPreview = function (emailDir, type) {
    if (type === void 0) { type = 'all'; }
    return __awaiter(void 0, void 0, void 0, function () {
        var spinner, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 3, , 4]);
                    spinner = (0, ora_1.default)('Generating emails preview').start();
                    (0, close_ora_on_sigint_1.closeOraOnSIGNIT)(spinner);
                    if (type === 'all' || type === 'templates') {
                        createEmailPreviews(emailDir);
                    }
                    if (!(type === 'all' || type === 'static')) return [3 /*break*/, 2];
                    return [4 /*yield*/, createStaticFiles()];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2:
                    spinner.stopAndPersist({
                        symbol: log_symbols_1.default.success,
                        text: 'Emails preview generated',
                    });
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    console.log({ error: error_1 });
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    });
};
exports.generateEmailsPreview = generateEmailsPreview;
var packageEmailsPath = osIndependentPath(constants_1.PACKAGE_EMAILS_PATH);
var createEmailPreviews = function (emailDir) {
    if (node_fs_1.default.existsSync(constants_1.PACKAGE_EMAILS_PATH)) {
        node_fs_1.default.rmSync(constants_1.PACKAGE_EMAILS_PATH, { recursive: true });
    }
    node_fs_1.default.mkdirSync(packageEmailsPath);
    var list = (0, glob_1.sync)(osIndependentPath(node_path_1.default.join(emailDir, '/*.{jsx,tsx}')), {
        absolute: true,
        // ignore any spec or test file within the email directory
        ignore: [node_path_1.default.join(emailDir, '*.?(spec|test).{jsx,tsx}')],
    });
    /**
     * instead of copying all files, which would break and js/ts imports,
     * we create placeholder files which just contain the following code:
     *
     * import Mail from `../../path/to/emails/my-template.tsx`
     * export default Mail
     */
    for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
        var _absoluteSrcFilePath = list_1[_i];
        var absoluteSrcFilePath = osIndependentPath(_absoluteSrcFilePath);
        var fileName = absoluteSrcFilePath.split('/').pop();
        if (fileName === undefined) {
            throw new Error("Could not get file name from ".concat(absoluteSrcFilePath));
        }
        var targetFile = node_path_1.default.join(packageEmailsPath, absoluteSrcFilePath.replace(osIndependentPath(emailDir), ''));
        var dirWithTargetFile = node_path_1.default.dirname(targetFile);
        var importPath = node_path_1.default.relative(dirWithTargetFile, node_path_1.default.dirname(absoluteSrcFilePath));
        var importFile = osIndependentPath(node_path_1.default.join(importPath, fileName));
        // if this import is changed, you also need to update `client/src/app/preview/[slug]/page.tsx`
        var sourceCode = "import Mail from '".concat(importFile, "';\nexport default Mail;\n");
        node_fs_1.default.writeFileSync(targetFile, sourceCode);
    }
};
var createStaticFiles = function () { return __awaiter(void 0, void 0, void 0, function () {
    var hasPublicDirectory, userHasStaticDirectory, result;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                hasPublicDirectory = node_fs_1.default.existsSync(constants_1.PACKAGE_PUBLIC_PATH);
                if (!hasPublicDirectory) return [3 /*break*/, 2];
                return [4 /*yield*/, node_fs_1.default.promises.rm(constants_1.PACKAGE_PUBLIC_PATH, { recursive: true })];
            case 1:
                _a.sent();
                _a.label = 2;
            case 2: return [4 /*yield*/, fs_extra_1.default.ensureDir(node_path_1.default.join(constants_1.PACKAGE_PUBLIC_PATH, 'static'))];
            case 3:
                _a.sent();
                userHasStaticDirectory = node_fs_1.default.existsSync(node_path_1.default.join(constants_1.CURRENT_PATH, 'static'));
                if (userHasStaticDirectory) {
                    result = shelljs_1.default.cp('-r', node_path_1.default.join(constants_1.CURRENT_PATH, 'static'), node_path_1.default.join(constants_1.PACKAGE_PUBLIC_PATH));
                    if (result.code > 0) {
                        throw new Error("Something went wrong while copying the file to ".concat(node_path_1.default.join(constants_1.CURRENT_PATH, 'static'), ", ").concat(result.cat()));
                    }
                }
                return [2 /*return*/];
        }
    });
}); };
