"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupServer = void 0;
var node_path_1 = __importDefault(require("node:path"));
var detect_package_manager_1 = require("detect-package-manager");
var find_root_1 = require("@manypkg/find-root");
var shelljs_1 = __importDefault(require("shelljs"));
var watcher_1 = require("./watcher");
var _1 = require(".");
/**
 * Utility function to run init/sync for the server in dev, build or start mode.
 *
 * @param type - dev | build | start
 * @param dir - Directory in which the emails are located, only for dev and build, unused for start.
 * @param port - The port on which the server will run, only for dev and start, unused for build.
 */
var setupServer = function (type, dir, port, skipInstall) {
    if (skipInstall === void 0) { skipInstall = false; }
    return __awaiter(void 0, void 0, void 0, function () {
        var cwd, emailDir, packageManager, watcherInstance;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, (0, find_root_1.findRoot)(_1.CURRENT_PATH).catch(function () { return ({
                        rootDir: _1.CURRENT_PATH,
                    }); })];
                case 1:
                    cwd = _a.sent();
                    emailDir = (0, _1.convertToAbsolutePath)(dir);
                    return [4 /*yield*/, (0, detect_package_manager_1.detect)({
                            cwd: cwd.rootDir,
                        }).catch(function () { return 'npm'; })];
                case 2:
                    packageManager = _a.sent();
                    if (!(type !== 'start')) return [3 /*break*/, 5];
                    return [4 /*yield*/, (0, _1.generateEmailsPreview)(emailDir)];
                case 3:
                    _a.sent();
                    return [4 /*yield*/, (0, _1.syncPkg)()];
                case 4:
                    _a.sent();
                    if (!skipInstall) {
                        (0, _1.installDependencies)(packageManager);
                    }
                    _a.label = 5;
                case 5:
                    if (type === 'dev') {
                        watcherInstance = (0, watcher_1.createWatcherInstance)(emailDir);
                        (0, _1.startDevServer)(packageManager, port);
                        (0, watcher_1.watcher)(watcherInstance, emailDir);
                    }
                    else if (type === 'build') {
                        (0, _1.buildProdServer)(packageManager);
                    }
                    else {
                        shelljs_1.default.cd(node_path_1.default.join(_1.REACT_EMAIL_ROOT));
                        (0, _1.startProdServer)(packageManager, port);
                    }
                    return [2 /*return*/];
            }
        });
    });
};
exports.setupServer = setupServer;
